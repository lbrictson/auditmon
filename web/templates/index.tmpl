{{ define "index" }}
    {{ template "authed_header" . }}
    <div class="container-fluid" style="padding-top: 2rem;">
        <div class="row">
            <div class="col-2">
                {{ if .Limited }}
                    <div class="alert alert-dismissible alert-warning">
                        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        <strong>Warning</strong> Search results truncated to {{ .Limit }} results.  Try narrowing your search.
                    </div>
                {{ end }}
                <div class="card">
                    <div class="card-body">
                <form action="/" method="post">
                    <div class="mb-3">
                        <label for="startDate">Start</label>
                        <input value="{{ .Filters.startTime }}" id="startDate" name="startDate" class="form-control" type="datetime-local" autocomplete="off" required />
                    </div>
                    <div class="mb-3">
                        <label for="endDate">End</label>
                        <input value="{{ .Filters.endTime }}" id="endDate" name="endDate" class="form-control" type="datetime-local" max='12-12-2000' required autocomplete="off" />
                    </div>
                    <div class="mb-3">
                        <label for="filterBy" class="form-label">Filter By</label>
                        <select id="filterBy" class="form-select" aria-label="Filter By" name="filterBy" hx-params="*" hx-target="#filterInputSwap" hx-get="/component/filterby-datalist.html">
                            <option value="username" {{ if eq .Filters.filterType "Username" }}selected{{ end }}>Username</option>
                            <option value="Resource" {{ if eq .Filters.filterType "Resource" }}selected{{ end }}>Resource</option>
                            <option value="EventName" {{ if eq .Filters.filterType "EventName" }}selected{{ end }}>Event</option>
                            <option value="EventSource" {{ if eq .Filters.filterType "EventSource" }}selected{{ end }}>Source</option>
                            <option value="IPAddress" {{ if eq .Filters.filterType "IPAddress" }}selected{{ end }}>IP Address</option>
                            <option value="RequestID" {{ if eq .Filters.filterType "RequestID" }}selected{{ end }}>Request ID</option>
                        </select>
                    </div>
                    <div class="mb-3" id="filterInputSwap">
                        <input min="3" {{ if eq .Filters.filterType "Username" }}list="autofill-username"{{ end }} {{ if eq .Filters.filterType "EventName" }}list="autofill-EventName"{{ end }}  type="text" class="form-control" id="filterInput" name="filterInput" value="{{ .Filters.filterString }}">
                    </div>
                    <datalist id="autofill-username">
                        {{ range .Usernames }}
                        <option value="{{ .Username }}">
                        {{ end }}
                    </datalist>
                    <datalist id="autofill-EventName">
                        {{ range .EventNames }}
                        <option value="{{ .Name }}">
                        {{ end }}
                    </datalist>
                    <div class="mb-3">
                        <label for="readOnly" class="form-label">Read Only</label>
                        <select id="readOnly" class="form-select" aria-label="Read Only" name="readOnly">
                            <option value="" {{ if eq .Filters.readOnly "" }}selected{{ end }}></option>
                            <option value="true" {{ if eq .Filters.readOnly "true" }}selected{{ end }}>True</option>
                            <option value="false" {{ if eq .Filters.readOnly "false" }}selected{{ end }}>False</option>
                        </select>
                    </div>
                    <div class="d-grid gap-2">
                    <button type="submit" class="btn btn-primary">Search</button>
                    </div>
                    <br>
                    <a href="/">Reset Search</a>
                    <hr>
                    <p>Viewing events in {{ .Timezone }} timezone  <a href="/profile">Change</a></p>
                </form>
                    </div>
                </div>
            </div>
            <div class="col-10">

                {{ $eventLength := len .Events }}
                {{ if eq $eventLength 0 }}
                    <h2>No matching events</h2>
                {{ else }}
                <div class="card">
                    <div class="card-body">
                <div class="d-flex justify-content-center text-success align-middle" id="loader">
                    <div class="spinner-border text-success" style="width: 6rem; height: 6rem;" role="status" >
                        <span class="visually-hidden">Loading...</span>
                    </div>
                    <br>
                </div>
                        <h3 class="d-flex justify-content-center text-success align-middle" id="loader2">Processing Events</h3>
                    <div id="tableHider" class="d-none">
                    <table class="table table-hover" id="eventTable">
                        <thead>
                        <tr>
                            <th scope="col-2">Time</th>
                            <th scope="col-4">Event Name</th>
                            <th scope="col-2">Username</th>
                            <th scope="col-3">Resource</th>
                            <th scope="col-1">Read Only</th>
                        </tr>
                        </thead>
                        <tbody id="myTable">
                        {{ range .Events }}
                            <tr class="table-dark" onclick="showDetails('{{ .EventID }}')" style="cursor: pointer;" hx-trigger="click" hx-get="/hook/event/{{ .EventID }}" hx-placeholder="Loading..." hx-target="#eventBody">
                                <th scope="row" data-order="{{ .UnixTime }}">{{ .FrontendEventTime }}</th>
                                <td>{{ .EventName }}</td>
                                <td>{{ .Username }}</td>
                                <td>{{ .Resource }}</td>
                                <td>{{ .ReadOnly }}</td>
                            </tr>
                        {{ end }}
                        </tbody>
                    </table>
                    </div>
                {{ end }}
            </div>
                </div>
            </div>
        </div>
    </div>


    <div class="modal" tabindex="-1" id="detailsModal">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="eventIDFill">Modal title</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body"><pre><code id="eventBody"></code></pre></div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

{{ template "base_js" }}
<script src="/static/js/date_files.js"></script>
<script type="text/javascript" charset="utf8" src="/static/js/datatables.js"></script>
<script>
    setDatePickToMaxToday("endDate")
</script>
<script>
    function showDetails(id) {
        console.log(id)
        var detailsModal = new bootstrap.Modal(document.getElementById('detailsModal'), {
            keyboard: true,
            focus: true,
            backdrop: 'static'
        })
        detailsModal.show()
        fill = document.getElementById('eventIDFill')
        fill.innerText = 'Event: ' + id
    }
</script>
<script>
    function swapper() {
        tableH = document.getElementById('tableHider');
        loader = document.getElementById('loader');
        loader2 = document.getElementById('loader2');
        loader.classList.add("d-none");
        loader2.classList.add("d-none");
        tableH.classList.remove("d-none");
    };

    $(document).ready( function () {
        $('#eventTable').DataTable({
            "pageLength": 25,
            "order": [[ 0, "desc" ]],
            "drawCallback": function(setting) {
                swapper();}
        });
    } );

</script>
<script>
    function searchTable() {
        var input, filter, found, table, tr, td, i, j;
        input = document.getElementById("myInput");
        filter = input.value.toUpperCase();
        table = document.getElementById("myTable");
        tr = table.getElementsByTagName("tr");
        for (i = 0; i < tr.length; i++) {
            td = tr[i].getElementsByTagName("td");
            for (j = 0; j < td.length; j++) {
                if (td[j].innerHTML.toUpperCase().indexOf(filter) > -1) {
                    found = true;
                }
            }
            if (found) {
                tr[i].style.display = "";
                found = false;
            } else {
                tr[i].style.display = "none";
            }
        }
    }
</script>
{{ template "authed_footer" }}
{{ end }}