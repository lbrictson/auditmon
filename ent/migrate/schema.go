// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// EventsColumns holds the columns for the "events" table.
	EventsColumns = []*schema.Column{
		{Name: "oid", Type: field.TypeUUID},
		{Name: "event_time", Type: field.TypeTime},
		{Name: "event_name", Type: field.TypeString},
		{Name: "username", Type: field.TypeString},
		{Name: "resource", Type: field.TypeString, Default: "-"},
		{Name: "source_ip", Type: field.TypeString, Default: "-"},
		{Name: "request_id", Type: field.TypeString, Default: "-"},
		{Name: "read_only", Type: field.TypeBool, Default: false},
		{Name: "event_data", Type: field.TypeJSON},
		{Name: "event_source", Type: field.TypeString, Default: "auditmon_internal"},
	}
	// EventsTable holds the schema information for the "events" table.
	EventsTable = &schema.Table{
		Name:       "events",
		Columns:    EventsColumns,
		PrimaryKey: []*schema.Column{EventsColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "oid", Type: field.TypeUUID},
		{Name: "username", Type: field.TypeString, Unique: true},
		{Name: "hashed_password", Type: field.TypeString},
		{Name: "role", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "password_last_set_at", Type: field.TypeTime},
		{Name: "force_password_change", Type: field.TypeBool, Default: false},
		{Name: "last_login", Type: field.TypeTime},
		{Name: "failed_logins", Type: field.TypeInt, Default: 0},
		{Name: "locked", Type: field.TypeBool, Default: false},
		{Name: "locked_until", Type: field.TypeTime},
		{Name: "mfa_secret", Type: field.TypeString, Nullable: true},
		{Name: "mfa_setup_completed", Type: field.TypeBool, Default: false},
		{Name: "recent_passwords", Type: field.TypeJSON, Nullable: true},
		{Name: "mfa_image", Type: field.TypeBytes, Nullable: true},
		{Name: "timezone", Type: field.TypeString, Nullable: true},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		EventsTable,
		UsersTable,
	}
)

func init() {
}
